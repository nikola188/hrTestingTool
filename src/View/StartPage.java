/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;
import util2.CandidateDataCheck;

/**
 *
 * @author nikola.bjelic
 * @author nikola.panajotovic
 */
public class StartPage extends javax.swing.JPanel {
    
    public static int MINUTES_PER_QUESTION = 2; 
    
    private JFrame root;
    private String defaultTime;

    /**
     * Creates new form StartPage
     */
    public StartPage() {
        initComponents();
        initNumberOfQuestionsListener();
        defaultTime = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nmbOfQestTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        candidateIdTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        testDurationTxt = new javax.swing.JTextField();
        startBtn = new javax.swing.JButton();

        jLabel1.setText("Candidate Id :");

        jLabel2.setText("Number of questions:");

        candidateIdTxt.setToolTipText("");

        jLabel3.setText("Test Duration(min):");

        testDurationTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                testDurationTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                testDurationTxtFocusLost(evt);
            }
        });

        startBtn.setText("Start Test");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(425, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(testDurationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(nmbOfQestTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(candidateIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(371, 371, 371))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(candidateIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nmbOfQestTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(testDurationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(startBtn)
                .addGap(190, 190, 190))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
           String minutes[] = testDurationTxt.getText().split(" ");
           int minutesLength = minutes.length;
           if(minutesLength > 0){
               if(CandidateDataCheck.everythingFine(candidateIdTxt.getText(), nmbOfQestTxt.getText(), minutes[minutesLength - 1])){
               QuestionsPage questionsPage;
               try {
                   int testDuration = Integer.parseInt(minutes[minutesLength - 1]);
                   questionsPage = new QuestionsPage(Integer.parseInt(nmbOfQestTxt.getText()), testDuration , Integer.parseInt(candidateIdTxt.getText()));
                   questionsPage.setParent(root);
                   questionsPage.setBounds(this.getBounds());
                   root.getContentPane().add(questionsPage);
                   this.setVisible(false);
                   
               } catch (Exception ex) {
                   Logger.getLogger(StartPage.class.getName()).log(Level.SEVERE, null, ex);
               }
               
           }else {
               JOptionPane.showMessageDialog(root, "Numbers only!");
           }
           }else {
               if(CandidateDataCheck.everythingFine(candidateIdTxt.getText(), nmbOfQestTxt.getText(), minutes[0])){
               QuestionsPage questionsPage;
               try {
                   questionsPage = new QuestionsPage(Integer.parseInt(nmbOfQestTxt.getText()), Integer.parseInt(testDurationTxt.getText()) , Integer.parseInt(candidateIdTxt.getText()));
                   questionsPage.setParent(root);
                   questionsPage.setBounds(this.getBounds());
                   root.getContentPane().add(questionsPage);
                   this.setVisible(false);
                   
               } catch (Exception ex) {
                   Logger.getLogger(StartPage.class.getName()).log(Level.SEVERE, null, ex);
               }
               
           }else {
               JOptionPane.showMessageDialog(root, "Numbers only!");
           }
           }
           
    }//GEN-LAST:event_startBtnActionPerformed

    private void testDurationTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_testDurationTxtFocusGained
        testDurationTxt.setText("");
    }//GEN-LAST:event_testDurationTxtFocusGained

    private void testDurationTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_testDurationTxtFocusLost
        testDurationTxt.setText(defaultTime);
    }//GEN-LAST:event_testDurationTxtFocusLost

    public void setParent(JFrame frame){
        root = frame;
    }

    public JTextField getCandidateIdTxt() {
        return candidateIdTxt;
    }

    public JTextField getNmbOfQestTxt() {
        return nmbOfQestTxt;
    }

    public JTextField getTestDurationTxt() {
        return testDurationTxt;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField candidateIdTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField nmbOfQestTxt;
    private javax.swing.JButton startBtn;
    private javax.swing.JTextField testDurationTxt;
    // End of variables declaration//GEN-END:variables

    private void initNumberOfQuestionsListener() {
        nmbOfQestTxt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                int rightSide = e.getDocument().getLength();
                int number = 0;
                try {
                    try {
                        String currentNumber = e.getDocument().getText(0, rightSide);
                        number = Integer.parseInt(currentNumber);
                        testDurationTxt.setText("Default time duration for " + number + " of questions is " + number * MINUTES_PER_QUESTION);
                        defaultTime = testDurationTxt.getText();
                    } catch (NumberFormatException nfe) {
                        JOptionPane.showMessageDialog(root, "Number Only!");
                    }
                    
                } catch (BadLocationException ex) {
                    Logger.getLogger(StartPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                
            }
        });
    }
}
